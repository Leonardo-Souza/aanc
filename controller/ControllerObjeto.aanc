<?php
/**
 * Created by PhpStorm.
 * User: Leonardo Vilarinho
 * Date: 12/04/2016
 * Time: 00:34
 */
class ControllerObjeto
{
    /**
     * @param $metodo
     * @param $dados
     * Chama método privado com parâmetros
     */
    public function abrirMetodo($metodo, $dados)
    {
        $this->$metodo($dados);
    }

    /**
     * @param $dados
     * Chama Model para listar objeto
     */
    private function listar($dados)
    {
        $tituloconteudo = $titulo = $dados['titulo'];
        $icone = $dados['icone'];
        try
        {
            $lista = $dados['model']->preparaListagem($dados['tabela']);
            if(empty($lista) or !$lista)
            {
                $erro = $dados['vazio'];
            }

        }
        catch(Exception $ex)
        {
            $erro = $ex->getMessage();
        }
        include "view/{$dados['objeto']}/listar-{$dados['objeto']}.aanc";
    }



    /**
 * @param $dados
 * Chama model e passa parâmetro para ele realizar a pesquisa
 */
    private function pesquisar($dados)
    {
        $titulo = $tituloconteudo = $dados['titulo'];
        $icone = $dados['icone'];

        if(isset($_POST['nomebusca']))
        {
            try
            {
                $$dados['objeto'] = $dados['model']->preparaConsulta("nome", $_POST['nomebusca'], $dados['tabela']);
            }
            catch(Exception $ex)
            {
                $erro = $ex->getMessage();
            }
        }

        include "view/{$dados['objeto']}/pesquisar-{$dados['objeto']}.aanc";
    }

    /**
 * @param $dados
 * Chama model e passa parâmetro para ele realizar a pesquisa de nada consta da diretoria
 */
    private function ncd($dados)
    {
        $titulo = $tituloconteudo = $dados['titulo'];
        $icone = $dados['icone'];

        if(isset($_POST['nomebusca']))
        {
            try
            {
                $$dados['objeto'] = $dados['model']->preparaConsulta("nome", $_POST['nomebusca'], $dados['tabela']);
            }
            catch(Exception $ex)
            {
                $erro = $ex->getMessage();
            }
        }
        else if(isset($_GET['id']))
        {
            try
            {
                $id = (int) $_GET['id'];
                $$dados['objeto'] = $dados['model']->preparaNadaConsta("alunos", "id = {$id}", "ncd");
            }
            catch(Exception $ex)
            {
                $erro = $ex->getMessage();
            }
        }
        include "view/nadaconsta/ncd-aluno.aanc";
    }

    /**
     * @param $dados
     * Chama model e passa parâmetro para ele realizar a pesquisa de nada consta do apoio
     */
    private function nca($dados)
    {
        $titulo = $tituloconteudo = $dados['titulo'];
        $icone = $dados['icone'];

        if(isset($_POST['nomebusca']))
        {
            try
            {
                $$dados['objeto'] = $dados['model']->preparaConsulta("nome", $_POST['nomebusca'], $dados['tabela']);
            }
            catch(Exception $ex)
            {
                $erro = $ex->getMessage();
            }
        }
        else if(isset($_GET['id']))
        {
            try
            {
                $id = (int) $_GET['id'];
                $$dados['objeto'] = $dados['model']->preparaNadaConsta("alunos", "id = {$id}", "nca");
            }
            catch(Exception $ex)
            {
                $erro = $ex->getMessage();
            }
        }
        include "view/nadaconsta/nca-aluno.aanc";
    }

    /**
     * @param $dados
     * Chama model com array de dados para validar e fazer insert
     */
    private function criar($dados)
    {
        $titulo = $tituloconteudo = $dados['titulo'];
        $icone =  $dados['icone'];

        if(isset($dados['consultar']) and !isset($dados['condicao']))
        {
            $consulta = $dados['model']->preparaConsulta(null, null, $dados['consultar']);
        }
        else if (isset($dados['consultar']) and isset($dados['condicao']))
        {
            $consulta = $dados['model']->preparaConsulta($dados['condicao'], null, $dados['consultar']);
        }

        if(isset($_POST["novo{$dados['objeto']}-requerido"]) and $_POST["novo{$dados['objeto']}-requerido"] == $_SESSION['token'])
        {
            try
            {
                $$dados['objeto'] = $this->moverArray($dados['infos']);
                $cadastro = $this->model->preparaCriacao($$dados['objeto']);

                $this->manipulaResultado($cadastro, $dados);
            }
            catch(Exception $ex)
            {
                $erro = $ex->getMessage();
            }
        }

        include "view/{$dados['objeto']}/novo-{$dados['objeto']}.aanc";
    }


    /**
     * @param $dados
     * Chama model com array de dados e ID para realizar a edição do objeto
     */
    private function editar($dados)
    {
        $titulo = $tituloconteudo = $dados['titulo'];
        $icone = $dados['icone'];

        $id = (int) $_GET['id'];
        $pesquisa = $dados['model']->preparaConsultaId($id, $dados['tabela']);
        
        $$dados['objeto'] = $this->moverArray($pesquisa[0]);

        if(isset($_POST["editar{$dados['objeto']}-requerido"]) and $_POST["editar{$dados['objeto']}-requerido"] == $_SESSION['token'])
        {
            try
            {
                $$dados['objeto'] = $this->moverArray($dados['infos']);

                $edicao = $dados['model']->preparaEdicao($$dados['objeto']);

                $this->manipulaResultado($edicao, $dados);
            }
            catch(Exception $ex)
            {
                $erro = $ex->getMessage();
            }
        }

        include "view/{$dados['objeto']}/editar-{$dados['objeto']}.aanc";
    }

    /**
     * @param $dados
     * Chama model com o ID do objeto para efetuar a exclusão do mesmo
     */
    private function apagar($dados)
    {
        $titulo = $tituloconteudo = $dados['titulo'];
        $icone = $dados['icone'];

        $id = (int) $_GET['id'];
        try
        {
            $tentativa = $dados['model']->preparaExclusao($id, $dados['tabela']);
            if($tentativa)
            {
                header("Location: {$_SESSION['self']}{$dados['objeto']}/listar");
            }
            else
            {
                $erro = $dados['erro'];
            }
        }
        catch(Exception $ex)
        {
            $erro = $ex->getMessage();
        }
    }

    /**
     * @param $acao
     * @param $objeto
     * @return string
     * Deixa o titulo da página e do painel mais correto na ligua portuguesa
     */
    public function defineTitulo($acao, $objeto)
    {
        $acao = ($acao == "ncd") ? "Nada Consta da Diretoria" : $acao;
        $acao = ($acao == "nca") ? "Nada Consta do Apoio" : $acao;
        return mb_strtoupper(mb_substr($acao,0,1)).mb_substr($acao,1)." ".$objeto;
    }

    /**
     * @param $acao
     * @return string
     * Define o icone da tela de acordo com a ação que ela executa
     */
    public function defineIcone($acao)
    {
        if($acao == "criar") return "plus";
        else if($acao == "listar") return "list";
        else if($acao == "pesquisar") return "search";
        else if($acao == "editar") return "pencil";
        else if($acao == "apagar") return "trash";
        else if($acao == "nca") return "file";
        else if($acao == "ncd") return "file";
    }

    /**
     * @param $origem
     * @return array
     * Move um array para outro
     */
    public function moverArray($origem)
    {
        $array = array();
        foreach ($origem as $key => $value)
        {
            $array[$key] = $value;
        }
        return $array;
    }

    /**
     * @param $resultado
     * @param $dados
     * Se houve sucesso na operação vai para a página listar do objeto, se não retorna o erro
     */
    private function manipulaResultado($resultado, $dados)
    {
        global $erro;

        if($resultado)
        {
            header("Location: {$_SESSION['self']}{$dados['objeto']}/listar");
        }
        else
        {
            $erro = $dados['erro'];
        }
    }

    public function inicializaDados($dados, $metodo, $model, $objeto, $consulta = null)
    {

        $plural = (mb_substr($objeto, -1) == "m") ? mb_substr($objeto, 0, -1)."n" : $objeto;
        $dados['titulo'] = $this->defineTitulo($metodo, "{$plural}s");
        $dados['icone'] = $this->defineIcone($metodo);
        $dados['erro'] = "Erro ao {$metodo} {$objeto}.";
        $dados['vazio'] = "Sem {$plural}s.";
        $dados['model'] = $model;
        $dados['tabela'] = "{$plural}s";
        $dados['objeto'] = $objeto;
        $dados['consultar'] = $consulta;
        return $dados;
    }
}