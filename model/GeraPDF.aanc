<?php
$caminho = isset($_SERVER['REQUEST_URI']) ? "" : "../";
require_once $caminho.'libs/dompdf/autoload.inc.php';
require_once 'ModelPersistencia.aanc';

use Dompdf\Dompdf;

class GeraPDF
{
    private $dompdf = NULL;
    public function __construct()
    {
        $this->dompdf = new Dompdf();
    }
    public function make($aluno, $curso, $tipo)
    {
        unset($aluno[0]['numero']);
        unset($aluno[0]['cep']);
        unset($aluno[0]['ativo']);

        $cabecalho = <<<CABECALHO
<div class="center">
<h1>{$aluno[0]['nome']}</h1>
<p>_______________________________________________</p>
<p>Email: {$aluno[0]['email']}</p>
<p>Curso: {$curso}</p>
</div>
CABECALHO;

        if($tipo == "ncd")
        {
            $docs = array(
                "Comprovante de Endereço" => $aluno[0]['cmpendereco'],
                "Reversista" => $aluno[0]['reservista'],
                "Histórico Escolar" => $aluno[0]['hitorico'],
                "Cópia Identidade" => $aluno[0]['identidade'],
                "C. Conclusão E. Médio" => $aluno[0]['conclusaoem'],
                "Título de Eleitor" => $aluno[0]['eleitor'],
                "C. de Nascimento" => $aluno[0]['certidao']
            );

            $tabela = "<h4>Documentação referente a: {$aluno[0]['nome']}</h4><hr/><br>";
            $tabela .= "<table class=\"table table-responsive  form-group-sm\"><thead><tr><th>Documento</th><th>Apresentado</th></tr></thead>";

            foreach ($docs as $chave => $valor)
            {
                $condicao = ($docs[$chave] == 1) ? "Sim" : "Não";
                $tabela .= "<tr><td>{$chave}</td><td class='center'>{$condicao}</td></tr>";
            }

            $tabela .= "</table>";

            if(in_array(0, $docs))
            {
                $tabela .= "<div class=\"center\"><h3>Nada Consta REPROVADO</h3></div>";
            }
            else
            {
                $tabela .= "<div class=\"center\"><h3>Nada Consta APROVADO</h3></div>";
            }

            $this->gerar($this->inicio().$cabecalho.$tabela.$this->asinatura().$this->fim(), $aluno[0]['nome']);
        }
        else
        {
            $advertencias = ModelPersistencia::consult("advertencias", "*", "aluno = {$aluno[0]['id']}");
            $faltas = ModelPersistencia::consult("chamada", "*", "aluno = {$aluno[0]['id']} AND status = 0");

            $conteudo = "<h4>Referente a: {$aluno[0]['nome']}</h4><hr/><br>";
            if(empty($advertencias) and empty($faltas))
            {
                $conteudo .= "<p>Não há nenhuma advertência nem falta em viagem no sistema com o seu nome, logo o seu nada consta foi aprovado, sua situação é regular.</p>";
                $conteudo .= "<div class=\"center\"><h3>Nada Consta APROVADO</h3></div>";

                $this->gerar($this->inicio().$cabecalho.$conteudo.$this->asinatura().$this->fim(), $aluno[0]['nome']);
            }
            else
            {
                if(!empty($advertencias))
                {
                    $conteudo .= "<h4>Foi encontrada as seguintes advertências no nome do aluno:</h4>";
                    $conteudo .= "<table class=\"table table-responsive  form-group-sm\"><thead><tr><th>Motivo</th><th>Detalhes</th></tr></thead>";
                    for ($adv = 0; $adv < count($advertencias); $adv++)
                    {
                        $descricao = empty($advertencias[$adv]['descricao']) ? "n/d" : $advertencias[$adv]['descricao'];
                        $conteudo .= "<tr><td>{$advertencias[$adv]['motivo']}</td><td class='center'>{$descricao}</td></tr>";
                    }
                    $conteudo .= "</table>";
                }
                else
                {
                    $conteudo .= "<h4>Não foram encontradas advertências no nome do aluno.</h4>";
                }

                if(!empty($faltas))
                {
                    $conteudo .= "<h4>Foi encontrada as seguintes falstas em viagens no nome do aluno:</h4>";
                    $conteudo .= "<table class=\"table table-responsive  form-group-sm\"><thead><tr><th>Viagem</th><th>Verba</th><th>Ida</th><th>Volta</th></tr></thead>";
                    for ($flt = 0; $flt < count($faltas); $flt++)
                    {
                        $viagem = ModelPersistencia::consult("viagens", "*", "id = {$faltas[$flt]['viagem']}");

                        $verba = empty($viagem[0]['verba']) ? "n/d" : "R$ ".$viagem[0]['verba'];
                        $conteudo .= "<tr><td>{$viagem[0]['nome']}</td><td class='center'>{$verba}</td><td class='center'>{$viagem[0]['ida']}</td><td class='center'>{$viagem[0]['volta']}</td></tr>";
                    }
                    $conteudo .= "</table>";
                }
                else
                {
                    $conteudo .= "<h4>Não foram encontradas faltas em viagens no nome do aluno.</h4>";
                }
                $conteudo .= "<div class=\"center\"><h3>Nada Consta REPROVADO</h3></div>";


                $this->gerar($this->inicio().$cabecalho.$conteudo.$this->asinatura().$this->fim(), $aluno[0]['nome']);
            }
        }

    }

    private function asinatura()
    {
        return <<<DECLARACAO
<br><br>
<div class='center'>
    <p>______________________________________________________________</p>
    <span>Assinatura do funcionário</span>
</div>
DECLARACAO;
    }

    private function fim()
    {
        return <<<AFTER
            </body>
        </html>
AFTER;
    }

    private function inicio()
    {
        return <<<BEFORE
        <!DOCTYPE html>
        <html lang="pt">
            <head>
                <meta charset="utf-8" />
                <style>
                h2{color:red;}
                table{width:100%;}
                th{border: 1px solid black;}
                td{border-bottom: 1px solid black;}
                .center{text-align: center;}
                .fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}
                .fa-heart:before{content:"\\f004"}
                </style>
            </head>
            <body>
BEFORE;
    }

    private function gerar($html, $arquivo)
    {
        $this->dompdf->loadHtml($html);
        // (Optional) Setup the paper size and orientation
        $this->dompdf->setPaper('A4', 'portrait');

        // Render the HTML as PDF
        $this->dompdf->render();

        // Output the generated PDF to Browser
        $this->dompdf->stream("nadaconsta_{$arquivo}". time());
    }
}